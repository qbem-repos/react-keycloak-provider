{"version":3,"file":"index.js","sources":["../src/hooks/useAuth.tsx","../src/components/ReactKeycloakProvider/index.tsx","../src/hooks/useKeycloak.tsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport Keycloak from 'keycloak-js';\n\nexport const useAuth = (authClient : Keycloak) => {\n  const isRun = useRef(false);\n  const [initialized, setInitialized] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [keycloak, setKeycloak] = useState<Keycloak>(new Keycloak);\n\n  useEffect(() => {\n    if (isRun.current) return;\n\n    isRun.current = true;\n    authClient\n      .init({\n        onLoad: \"check-sso\",\n      })\n      .then((res) => {\n        console.log(res ? \"authenticated\" : \"not authenticated\")\n        authClient.clientId ? setInitialized(true) : setInitialized(false);\n        setKeycloak(authClient)\n      }).catch((error) =>{\n        setError(error)\n        console.error(\"error: \", error)\n      })\n  }, [authClient]);\n\n  return {keycloak, initialized, error};\n};","import * as React from \"react\";\nimport { createContext } from \"react\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport Keycloak from 'keycloak-js';\n\ntype KeycloakInstance = Keycloak;\n\ntype MyPropConentext = {\n  keycloak: KeycloakInstance,\n  initialized: boolean,\n  error: string\n}\n\ntype Props = {\n  authClient: KeycloakInstance\n  children: React.ReactNode\n}\n\nexport const KeycloakContext = createContext({} as MyPropConentext);\nexport const ReactKeycloakProvider = ({ authClient, children } : Props) => {\n  const {keycloak, initialized, error} = useAuth(authClient);\n  return (\n    <KeycloakContext.Provider value={{ keycloak, initialized, error }}>\n      {children}\n    </KeycloakContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { KeycloakContext } from '../components/ReactKeycloakProvider';\n\nexport const useKeycloak = () => {\n  const {keycloak, initialized, error} = useContext(KeycloakContext)\n\n  return {keycloak, initialized, error};\n};"],"names":["useRef","useState","Keycloak","useEffect","createContext","React","useContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,IAAM,OAAO,GAAG,UAAC,UAAqB,EAAA;AAC3C,IAAA,IAAM,KAAK,GAAGA,YAAM,CAAC,KAAK,CAAC,CAAC;IACtB,IAAA,EAAA,GAAgCC,cAAQ,CAAC,KAAK,CAAC,EAA9C,WAAW,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,cAAc,GAAA,EAAA,CAAA,CAAA,CAAmB,CAAC;IAChD,IAAA,EAAA,GAAoBA,cAAQ,CAAC,EAAE,CAAC,EAA/B,KAAK,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAgB,CAAC;AACjC,IAAA,IAAA,EAA0B,GAAAA,cAAQ,CAAW,IAAIC,4BAAQ,CAAC,EAAzD,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,WAAW,GAAA,EAAA,CAAA,CAAA,CAAoC,CAAC;AAEjE,IAAAC,eAAS,CAAC,YAAA;QACR,IAAI,KAAK,CAAC,OAAO;YAAE,OAAO;AAE1B,QAAA,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;QACrB,UAAU;AACP,aAAA,IAAI,CAAC;AACJ,YAAA,MAAM,EAAE,WAAW;SACpB,CAAC;aACD,IAAI,CAAC,UAAC,GAAG,EAAA;AACR,YAAA,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,eAAe,GAAG,mBAAmB,CAAC,CAAA;AACxD,YAAA,UAAU,CAAC,QAAQ,GAAG,cAAc,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;YACnE,WAAW,CAAC,UAAU,CAAC,CAAA;AACzB,SAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK,EAAA;YACb,QAAQ,CAAC,KAAK,CAAC,CAAA;AACf,YAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAA;AACjC,SAAC,CAAC,CAAA;AACN,KAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IAEjB,OAAO,EAAC,QAAQ,EAAA,QAAA,EAAE,WAAW,aAAA,EAAE,KAAK,EAAA,KAAA,EAAC,CAAC;AACxC;;ACVO,IAAM,eAAe,GAAGC,mBAAa,CAAC,EAAqB,CAAC,CAAC;AAC7D,IAAM,qBAAqB,GAAG,UAAC,EAAgC,EAAA;QAA9B,UAAU,GAAA,EAAA,CAAA,UAAA,EAAE,QAAQ,GAAA,EAAA,CAAA,QAAA,CAAA;AACpD,IAAA,IAAA,EAAiC,GAAA,OAAO,CAAC,UAAU,CAAC,EAAnD,QAAQ,GAAA,EAAA,CAAA,QAAA,EAAE,WAAW,GAAA,EAAA,CAAA,WAAA,EAAE,KAAK,WAAuB,CAAC;IAC3D,QACEC,+BAAC,eAAe,CAAC,QAAQ,EAAC,EAAA,KAAK,EAAE,EAAE,QAAQ,EAAA,QAAA,EAAE,WAAW,EAAA,WAAA,EAAE,KAAK,EAAA,KAAA,EAAE,EAC9D,EAAA,QAAQ,CACgB,EAC3B;AACJ;;ACvBa,IAAA,WAAW,GAAG,YAAA;AACnB,IAAA,IAAA,EAAiC,GAAAC,gBAAU,CAAC,eAAe,CAAC,EAA3D,QAAQ,GAAA,EAAA,CAAA,QAAA,EAAE,WAAW,GAAA,EAAA,CAAA,WAAA,EAAE,KAAK,WAA+B,CAAA;IAElE,OAAO,EAAC,QAAQ,EAAA,QAAA,EAAE,WAAW,aAAA,EAAE,KAAK,EAAA,KAAA,EAAC,CAAC;AACxC;;;;;;"}